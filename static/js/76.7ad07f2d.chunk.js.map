{"version":3,"file":"static/js/76.7ad07f2d.chunk.js","mappings":"oPACA,EAA4B,wBAA5B,EAAgE,wB,SC8ChE,EAzCc,WACZ,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAqBF,EAAAA,EAAAA,UAAS,MAArBG,GAAT,eACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,WAAMH,GAAN,iGAEUI,EAAAA,EAAAA,IAAgBJ,GAF1B,OAEPK,EAFO,OAGbP,EAASO,EAASC,MAHL,gDAMbP,EAAS,KAAMQ,SANF,yDAAH,sDASdJ,EAASH,EACV,GAAE,CAACA,KAGF,+BACE,eAAIQ,UAAWC,EAAf,SACGZ,EAAMa,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACT,gBAAaN,UAAWC,EAAxB,WACE,gBACEM,IACEF,EAAY,0CACyBA,IAEnC,sDAGJG,IAAKL,KAEP,6BAAKA,MACL,6BAAKG,OAZEF,EADA,OAmBlB,C,+LC5CKK,EAAU,mCACVC,EAAW,gCAEVC,EAAgB,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAFnB,cAClBZ,EADkB,yBAIjBA,EAASgB,MAJQ,2CAAH,qDAOjBC,EAAc,mCAAG,WAAOC,GAAP,uFACEH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC+BM,EAD/B,2BADF,cACflB,EADe,yBAIdA,EAASgB,MAJK,2CAAH,sDAObG,EAAe,mCAAG,WAAMZ,GAAN,uFACAQ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDN,EADC,oBACaK,EADb,oBADA,cACjBZ,EADiB,yBAIhBA,EAASgB,MAJO,2CAAH,sDAMfjB,EAAe,mCAAG,WAAMQ,GAAN,uFACAQ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDN,EADC,4BACqBK,EADrB,oBADA,cACjBZ,EADiB,yBAIhBA,EAASgB,MAJO,2CAAH,sDAMhBI,EAAe,mCAAG,WAAMb,GAAN,uFACCQ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDN,EADC,4BACqBK,EADrB,oBADD,cAChBZ,EADgB,yBAIfA,EAASgB,MAJM,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/servises/fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorList\":\"Cast_actorList__0r4HV\",\"actorItem\":\"Cast_actorItem__fXEWx\"};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { getMovieCredits } from 'components/servises/fetch';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\n\n const Cast = () => {\n  const [actor, setActor] = useState([]);\n  const [, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getActor = async movieId => {\n      try {\n        const response = await getMovieCredits(movieId);\n        setActor(response.cast);\n        // console.log(response.cast)\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getActor(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <ul className={css.actorList}>\n        {actor.map(({ name, id, profile_path, character }) => (\n          <li key={id} className={css.actorItem}>\n            <img \n              src={\n                profile_path ? (\n                  `https://image.tmdb.org/t/p/w200/${profile_path}`\n                ) : (\n                  <p>Soryy? we don't have photo</p>\n                )\n              }\n              alt={name}\n            />\n            <p> {name}</p>\n            <p> {character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'bbea7a3ac9cdb2664b79706c047bd6be';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n const getTrendingMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nconst getSearchMovie = async (search) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${search}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\n const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nconst getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport {\n    getTrendingMovie,\n  getSearchMovie,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["useState","actor","setActor","setError","movieId","useParams","useEffect","getActor","getMovieCredits","response","cast","message","className","css","map","name","id","profile_path","character","src","alt","API_KEY","BASE_URL","getTrendingMovie","axios","data","getSearchMovie","search","getMovieDetails","getMovieReviews"],"sourceRoot":""}