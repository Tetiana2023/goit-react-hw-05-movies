{"version":3,"file":"static/js/186.8232cad1.chunk.js","mappings":"yNAyCA,UApCiB,WACf,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAqBF,EAAAA,EAAAA,UAAS,IAArBG,GAAT,eACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,WAAMH,GAAN,iGAEQI,EAAAA,EAAAA,IAAgBJ,GAFxB,OAETK,EAFS,OAGfP,EAAWO,EAASC,SAHL,gDAKfP,EAAS,KAAMQ,SALA,yDAAH,sDAQhBJ,EAAWH,EACZ,GAAE,CAACA,KAGF,8BACsB,IAAnBH,EAAQW,QACP,wBACGX,EAAQY,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EAKZ,OAGH,8DAIP,C,+LCtCKG,EAAU,mCACVC,EAAW,gCAEVC,EAAgB,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAFnB,cAClBR,EADkB,yBAIjBA,EAASY,MAJQ,2CAAH,qDAOjBC,EAAc,mCAAG,WAAOC,GAAP,uFACEH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC+BM,EAD/B,2BADF,cACfd,EADe,yBAIdA,EAASY,MAJK,2CAAH,sDAObG,EAAe,mCAAG,WAAMV,GAAN,uFACAM,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDJ,EADC,oBACaG,EADb,oBADA,cACjBR,EADiB,yBAIhBA,EAASY,MAJO,2CAAH,sDAMfI,EAAe,mCAAG,WAAMX,GAAN,uFACAM,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDJ,EADC,4BACqBG,EADrB,oBADA,cACjBR,EADiB,yBAIhBA,EAASY,MAJO,2CAAH,sDAMhBb,EAAe,mCAAG,WAAMM,GAAN,uFACCM,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDJ,EADC,4BACqBG,EADrB,oBADD,cAChBR,EADgB,yBAIfA,EAASY,MAJM,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/servises/fetch.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { getMovieReviews } from 'components/servises/fetch';\nimport { useParams } from 'react-router-dom';\n\n const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [, setError] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async movieId => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <p>{author}</p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>Sorry, we don't have any reviews </p>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'bbea7a3ac9cdb2664b79706c047bd6be';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n const getTrendingMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nconst getSearchMovie = async (search) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${search}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\n const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nconst getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport {\n    getTrendingMovie,\n  getSearchMovie,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["useState","reviews","setReviews","setError","movieId","useParams","useEffect","getReviews","getMovieReviews","response","results","message","length","map","id","author","content","API_KEY","BASE_URL","getTrendingMovie","axios","data","getSearchMovie","search","getMovieDetails","getMovieCredits"],"sourceRoot":""}