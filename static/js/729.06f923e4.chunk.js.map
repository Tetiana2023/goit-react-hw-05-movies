{"version":3,"file":"static/js/729.06f923e4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/servises/fetch.js","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"item\":\"MoviesList_item__eePYv\",\"movieLink\":\"MoviesList_movieLink__QlD4H\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\nimport PropTypes from 'prop-types';\n\n const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul className={css.moviesList}>\n        {movies.map(({ id, title, name }) => (\n          <li key={id} className={css.item}>\n            <Link\n              className={css.movieLink}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title || name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies:PropTypes.arrayOf(\n    PropTypes.shape({\n      id:PropTypes.number,\n      title:PropTypes.string,\n      name:PropTypes.string,\n    })\n  )\n}\n","import axios from 'axios';\n\nconst API_KEY = 'bbea7a3ac9cdb2664b79706c047bd6be';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n const getTrendingMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nconst getSearchMovie = async (search) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${search}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\n const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nconst getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport {\n    getTrendingMovie,\n  getSearchMovie,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBar_searchbar__xBucJ\",\"searchForm\":\"SearchBar_searchForm__V6XO6\",\"searchFormbutton\":\"SearchBar_searchFormbutton__Grqog\",\"searchFormbutton-label\":\"SearchBar_searchFormbutton-label__bp4-w\",\"searchForminput\":\"SearchBar_searchForminput__jg52j\"};","import { useState } from 'react';\nimport {FcSearch} from 'react-icons/fc';\nimport css from './SearchBar.module.css';\nimport Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\n\nexport const SearchBar = ({onSubmit}) => {\n    const [inputValue, setInputValue] = useState('');\n\n   const hendleInputChange = (e) => {\n    setInputValue(e.currentTarget.value.toLowerCase().trim())\n\n   }\n\n    const hendleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(inputValue);\n      if(!inputValue.trim()){\n        Notiflix.Notify.info('PLease, fill search field.');\n        return;\n      }\n      setInputValue('');\n    }\n\n    return (\n    <div className={css.searchbar}>    \n        <form  className={css.searchForm} onSubmit={hendleSubmit}>\n        <button type=\"submit\" className={css.searchFormbutton} >\n         <FcSearch style={{marginRight:8, width:\"20\", height:\"20\"}}/>\n        </button>\n  \n        <input\n          className={css.searchForminput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={hendleInputChange}\n          value={inputValue}\n        />\n      </form>\n     </div>\n    )\n};\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n\n}\n","import  MoviesList  from 'components/MoviesList/MoviesList';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { getSearchMovie } from 'components/servises/fetch';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\n const Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [, setError] = useState('')\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === \"\") {\n      return;\n    }\n    const getMovieSeach = async search => {\n      try {\n        const response = await getSearchMovie(search);\n        setMovies(response.results);\n        if(response.results.length === 0){\n          Notiflix.Notify.info('Nothing was found');\n        }\n      } catch (error) {\n        setError(error.massige);\n      }\n    };\n    getMovieSeach(query);\n  }, [query]);\n  \n const handleFormSubmit = query => {\n    const nextFilm = query !== '' ? { query } : {};\n    setSearchParams(nextFilm);\n    setMovies([]);\n  };\n  return (\n    <>\n      <SearchBar onSubmit={handleFormSubmit} /> \n      {movies && <MoviesList movies={movies} />} \n    </>\n  );\n}\nexport default Movies;"],"names":["movies","location","useLocation","className","css","map","id","title","name","to","state","from","API_KEY","BASE_URL","getTrendingMovie","axios","response","data","getSearchMovie","search","getMovieDetails","getMovieCredits","getMovieReviews","SearchBar","onSubmit","useState","inputValue","setInputValue","e","preventDefault","trim","Notiflix","type","style","marginRight","width","height","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","setMovies","setError","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMovieSeach","results","length","massige","MoviesList"],"sourceRoot":""}